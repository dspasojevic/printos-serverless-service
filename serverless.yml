service: printos-service

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-southeast-2:*:*"

  region: ap-southeast-2

  environment:
    PRINT_JOBS_TABLE_NAME: "printJobsTable-${self:custom.stage}"
    NEXT_JOB_ID_TABLE_NAME: "nextJobIdTable-${self:custom.stage}"
    CLIENT_TABLE_NAME: "clientsTable-${self:custom.stage}"

custom:
  stage: "${self:provider.stage}"

functions:
  lookup:
    handler: handler.lookup
    events:
      - http:
          path: lookup
          method: post
  
  submit:
    handler: handler.submit
    events:
      - http:
          path: submit
          method: post


  update:
    handler: handler.update
    events:
      - http:
          path: update
          method: post

  printJob:
    handler: handler.printJob
    events:
      - http:
          path: print-jobs
          method: get

  jobStatus:
    handler: handler.jobStatus
    events:
      - http:
          path: status
          method: post

resources:
  Resources:
    printJobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "printJobsTable-${self:custom.stage}"
        AttributeDefinitions:
          - AttributeName: jobId
            AttributeType: N
        KeySchema:
          - AttributeName: jobId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    nextJobIdTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "nextJobIdTable-${self:custom.stage}"
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    clientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "clientsTable-${self:custom.stage}"
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-offline
  - serverless-dynamodb-local
